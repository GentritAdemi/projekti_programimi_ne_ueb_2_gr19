package com.example.knkproject.Database;

import java.sql.*;

public class DatabaseConnection {


    private static String DRIVER_NAME = "com.mysql.cj.jdbc.Driver";
    private static String IP = "localhost:3306";
    private static String DATABASE_NAME = "project";
    private static String USER_NAME = "root";
    private static String PASSWORD = "210756100127";
    private Connection conn;

    public static DatabaseConnection getInstance() {
        return new DatabaseConnection();
    }

    private DatabaseConnection() {
        this.conn = this.connection();
    }

    public Connection getConnection() {
        return this.conn;
    }

    private static Connection connection() {
        try {
            Class.forName(DatabaseConnection.DRIVER_NAME);
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://"+ DatabaseConnection.IP +"/" + DatabaseConnection.DATABASE_NAME,
                    DatabaseConnection.USER_NAME,
                    DatabaseConnection.PASSWORD);
            return con;
        }catch (Exception e) {
            return null;
        }
    }

    public ResultSet executeQuery(String query, String types, Object[] values) throws SQLException {
        PreparedStatement preparedStatement = this.conn.prepareStatement(query);
        for(int i = 0; i < values.length; i++) {
            if( types.charAt(i) == 'i') {
                preparedStatement.setInt(i+1, (int) values[i]);
            }else if( types.charAt(i) == 's') {
                preparedStatement.setString(i+1, (String) values[i]);
            }else {
                // ---
            }
        }
        return preparedStatement.executeQuery();
    }

    public int execute(String query, String types, Object[] values) throws SQLException {
        PreparedStatement preparedStatement = this.conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
        for(int i = 0; i < values.length; i++) {
            if( types.charAt(i) == 'i') {
                preparedStatement.setInt(i+1, (int) values[i]);
            }else if( types.charAt(i) == 's') {
                preparedStatement.setString(i+1, (String) values[i]);
            }else {
                // ---
            }
        }

        int lastInsertedId = 0;
        preparedStatement.execute();

        ResultSet res = preparedStatement.getGeneratedKeys();
        if(res.next()) {
            lastInsertedId = res.getInt(1);
        }
        preparedStatement.close();
        this.close();

        return lastInsertedId;
    }

    public void close() {
        try {
            this.conn.close();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

}
